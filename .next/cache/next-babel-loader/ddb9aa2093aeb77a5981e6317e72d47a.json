{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\web3_projects\\\\blockchain-chess\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { Web3ReactProvider } from '@web3-react/core';\nimport { Web3Provider } from '@ethersproject/providers';\nimport Header from '../Components/Header';\nimport Wallets from '../Components/Wallets';\nimport useWallet from '../Components/Hooks/useWallet';\n\nfunction getLibrary(provider) {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 12000;\n  return library;\n}\n\nconst wallets = useWallet();\nexport default function () {\n  return __jsx(Web3ReactProvider, {\n    getLibrary: getLibrary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(Header, _extends({}, wallets, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  })), __jsx(Wallets, _extends({}, wallets, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/rodri/web3_projects/blockchain-chess/pages/index.tsx"],"names":["React","Web3ReactProvider","Web3Provider","Header","Wallets","useWallet","getLibrary","provider","library","pollingInterval","wallets"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAASC,iBAAT,QAAyE,kBAAzE;AAOA,SAASC,YAAT,QAA6B,0BAA7B;AAGA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,OAAOC,SAAP,MAAsB,+BAAtB;;AAoBA,SAASC,UAAT,CAAoBC,QAApB,EAAiD;AAC/C,QAAMC,OAAO,GAAG,IAAIN,YAAJ,CAAiBK,QAAjB,CAAhB;AACAC,EAAAA,OAAO,CAACC,eAAR,GAA0B,KAA1B;AACA,SAAOD,OAAP;AACD;;AAED,MAAME,OAAO,GAAGL,SAAS,EAAzB;AAIA,eAAe,YAAW;AAExB,SACE,MAAC,iBAAD;AAAmB,IAAA,UAAU,EAAEC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD,eAAYI,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE,MAAC,OAAD,eAAaA,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF;AAMD","sourcesContent":["import React, { useState } from 'react'\r\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\r\n} from '@web3-react/injected-connector'\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector'\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from '@web3-react/frame-connector'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport { formatEther } from '@ethersproject/units'\r\nimport Navigation from '../Components/Navigation'\r\nimport Header from '../Components/Header'\r\nimport ChainId from '../Components/ChainId'\r\nimport Wallets from '../Components/Wallets'\r\nimport Account from '../Components/Account'\r\nimport useWallet from '../Components/Hooks/useWallet';\r\n\r\nimport { useEagerConnect, useInactiveListener } from '../hooks'\r\nimport {\r\n  injected,\r\n  network,\r\n  walletconnect,\r\n  walletlink,\r\n  ledger,\r\n  trezor,\r\n  lattice,\r\n  frame,\r\n  authereum,\r\n  fortmatic,\r\n  magic,\r\n  portis,\r\n  torus\r\n} from '../connectors'\r\nimport { Spinner } from '../components/Spinner'\r\n\r\nfunction getLibrary(provider: any): Web3Provider {\r\n  const library = new Web3Provider(provider)\r\n  library.pollingInterval = 12000\r\n  return library\r\n}\r\n\r\nconst wallets = useWallet();\r\n\r\n\r\n\r\nexport default function() {\r\n\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Header {...wallets} />\r\n      <Wallets {...wallets} />\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}