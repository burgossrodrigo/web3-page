{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\rodri\\\\web3_projects\\\\web3-page\\\\web3-react\\\\example\\\\Components\\\\Balance.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\nexport default function Balance() {\n  _s();\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      library = _useWeb3React.library,\n      chainId = _useWeb3React.chainId;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      balance = _React$useState2[0],\n      setBalance = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (!!account && !!library) {\n      var stale = false;\n      library.getBalance(account).then(function () {\n        var balance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : any;\n\n        if (!stale) {\n          setBalance(balance);\n        }\n      })[\"catch\"](function () {\n        if (!stale) {\n          setBalance(null);\n        }\n      });\n      return function () {\n        stale = true;\n        setBalance(undefined);\n      };\n    }\n  }, [account, library, chainId]); // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Balance\"), __jsx(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"gold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDCB0\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, balance === null ? 'Error' : balance ? \"\\u039E\".concat(formatEther(balance)) : ''));\n}\n\n_s(Balance, \"M1WVM1XYBvl8/UPoZ+Zp2BzPIno=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = Balance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"sources":["C:/Users/rodri/web3_projects/web3-page/web3-react/example/Components/Balance.js"],"names":["React","useState","useEffect","Web3ReactProvider","useWeb3React","UnsupportedChainIdError","Balance","account","library","chainId","balance","setBalance","stale","getBalance","then","any","undefined","formatEther"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,iBAAT,EAA4BC,YAA5B,EAA0CC,uBAA1C,QAAyE,kBAAzE;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,sBAAsCF,YAAY,EAAlD;AAAA,MAAQG,OAAR,iBAAQA,OAAR;AAAA,MAAiBC,OAAjB,iBAAiBA,OAAjB;AAAA,MAA0BC,OAA1B,iBAA0BA,OAA1B;;AAEA,wBAA8BT,KAAK,CAACC,QAAN,EAA9B;AAAA;AAAA,MAAOS,OAAP;AAAA,MAAgBC,UAAhB;;AACAX,EAAAA,KAAK,CAACE,SAAN,CAAgB,YAAM;AACpB,QAAI,CAAC,CAACK,OAAF,IAAa,CAAC,CAACC,OAAnB,EAA4B;AAC1B,UAAII,KAAK,GAAG,KAAZ;AAEAJ,MAAAA,OAAO,CACJK,UADH,CACcN,OADd,EAEGO,IAFH,CAEQ,YAAmB;AAAA,YAAlBJ,OAAkB,uEAARK,GAAQ;;AACvB,YAAI,CAACH,KAAL,EAAY;AACVD,UAAAA,UAAU,CAACD,OAAD,CAAV;AACD;AACF,OANH,WAOS,YAAM;AACX,YAAI,CAACE,KAAL,EAAY;AACVD,UAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,OAXH;AAaA,aAAO,YAAM;AACXC,QAAAA,KAAK,GAAG,IAAR;AACAD,QAAAA,UAAU,CAACK,SAAD,CAAV;AACD,OAHD;AAID;AACF,GAtBD,EAsBG,CAACT,OAAD,EAAUC,OAAV,EAAmBC,OAAnB,CAtBH,EAJgC,CA0BA;;AAEhC,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,OAAO,KAAK,IAAZ,GAAmB,OAAnB,GAA6BA,OAAO,mBAAOO,WAAW,CAACP,OAAD,CAAlB,IAAgC,EAA3E,CALF,CADF;AASD;;GArCuBJ,O;UACgBF,Y;;;KADhBE,O","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\n\r\nexport default function Balance() {\r\n  const { account, library, chainId } = useWeb3React()\r\n\r\n  const [balance, setBalance] = React.useState()\r\n  React.useEffect(() => {\r\n    if (!!account && !!library) {\r\n      let stale = false\r\n\r\n      library\r\n        .getBalance(account)\r\n        .then((balance = any) => {\r\n          if (!stale) {\r\n            setBalance(balance)\r\n          }\r\n        })\r\n        .catch(() => {\r\n          if (!stale) {\r\n            setBalance(null)\r\n          }\r\n        })\r\n\r\n      return () => {\r\n        stale = true\r\n        setBalance(undefined)\r\n      }\r\n    }\r\n  }, [account, library, chainId]) // ensures refresh if referential identity of library doesn't change across chainIds\r\n\r\n  return (\r\n    <>\r\n      <span>Balance</span>\r\n      <span role=\"img\" aria-label=\"gold\">\r\n        ðŸ’°\r\n      </span>\r\n      <span>{balance === null ? 'Error' : balance ? `Îž${formatEther(balance)}` : ''}</span>\r\n    </>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}