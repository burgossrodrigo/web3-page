{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\rodri\\\\web3_projects\\\\blockchain-chess\\\\Components\\\\Wallets.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\nimport { NoEthereumProviderError, UserRejectedRequestError as UserRejectedRequestErrorInjected } from '@web3-react/injected-connector';\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector';\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from '@web3-react/frame-connector';\nimport { Web3Provider } from '@ethersproject/providers';\nimport { useEagerConnect, useInactiveListener } from '../hooks';\nimport { injected, network, walletconnect, walletlink, ledger, trezor, lattice, frame, authereum, fortmatic, magic, portis, torus } from '../connectors';\nimport { Spinner } from './Spinner';\nexport default function Wallet(_ref) {\n  _s();\n\n  var _connectorsByName,\n      _this = this;\n\n  var openWallets = _ref.openWallets;\n  var ConnectorNames;\n\n  (function (ConnectorNames) {\n    ConnectorNames[\"Injected\"] = \"Injected\";\n    ConnectorNames[\"Network\"] = \"Network\";\n    ConnectorNames[\"WalletConnect\"] = \"WalletConnect\";\n    ConnectorNames[\"WalletLink\"] = \"WalletLink\";\n    ConnectorNames[\"Ledger\"] = \"Ledger\";\n    ConnectorNames[\"Trezor\"] = \"Trezor\";\n    ConnectorNames[\"Lattice\"] = \"Lattice\";\n    ConnectorNames[\"Frame\"] = \"Frame\";\n    ConnectorNames[\"Authereum\"] = \"Authereum\";\n    ConnectorNames[\"Fortmatic\"] = \"Fortmatic\";\n    ConnectorNames[\"Magic\"] = \"Magic\";\n    ConnectorNames[\"Portis\"] = \"Portis\";\n    ConnectorNames[\"Torus\"] = \"Torus\";\n  })(ConnectorNames || (ConnectorNames = {}));\n\n  var connectorsByName = (_connectorsByName = {}, _defineProperty(_connectorsByName, ConnectorNames.Injected, injected), _defineProperty(_connectorsByName, ConnectorNames.Network, network), _defineProperty(_connectorsByName, ConnectorNames.WalletConnect, walletconnect), _defineProperty(_connectorsByName, ConnectorNames.WalletLink, walletlink), _defineProperty(_connectorsByName, ConnectorNames.Ledger, ledger), _defineProperty(_connectorsByName, ConnectorNames.Trezor, trezor), _defineProperty(_connectorsByName, ConnectorNames.Lattice, lattice), _defineProperty(_connectorsByName, ConnectorNames.Frame, frame), _defineProperty(_connectorsByName, ConnectorNames.Authereum, authereum), _defineProperty(_connectorsByName, ConnectorNames.Fortmatic, fortmatic), _defineProperty(_connectorsByName, ConnectorNames.Magic, magic), _defineProperty(_connectorsByName, ConnectorNames.Portis, portis), _defineProperty(_connectorsByName, ConnectorNames.Torus, torus), _connectorsByName);\n\n  function getErrorMessage(error) {\n    if (error instanceof NoEthereumProviderError) {\n      return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.';\n    } else if (error instanceof UnsupportedChainIdError) {\n      return \"You're connected to an unsupported network.\";\n    } else if (error instanceof UserRejectedRequestErrorInjected || error instanceof UserRejectedRequestErrorWalletConnect || error instanceof UserRejectedRequestErrorFrame) {\n      return 'Please authorize this website to access your Ethereum account.';\n    } else {\n      console.error(error);\n      return 'An unknown error occurred. Check the console for more details.';\n    }\n  }\n\n  function getLibrary(provider) {\n    var library = new Web3Provider(provider);\n    library.pollingInterval = 12000;\n    return library;\n  }\n\n  var context = useWeb3React();\n  var connector = context.connector,\n      library = context.library,\n      chainId = context.chainId,\n      account = context.account,\n      activate = context.activate,\n      deactivate = context.deactivate,\n      active = context.active,\n      error = context.error; // handle logic to recognize the connector currently being activated\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activatingConnector = _React$useState2[0],\n      setActivatingConnector = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined);\n    }\n  }, [activatingConnector, connector]); // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n\n  var triedEager = useEagerConnect(); // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n\n  useInactiveListener(!triedEager || !!activatingConnector);\n\n  if (openWallet === true) {\n    return __jsx(React.Fragment, null, __jsx(\"hr\", {\n      style: {\n        margin: '2rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }\n    }), __jsx(\"div\", {\n      style: {\n        display: 'grid',\n        gridGap: '1rem',\n        gridTemplateColumns: '1fr 1fr',\n        maxWidth: '20rem',\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }\n    }, Object.keys(connectorsByName).map(function (name) {\n      var currentConnector = connectorsByName[name];\n      var activating = currentConnector === activatingConnector;\n      var connected = currentConnector === connector;\n      var disabled = !triedEager || !!activatingConnector || connected || !!error;\n      return __jsx(\"button\", {\n        style: {\n          height: '3rem',\n          borderRadius: '1rem',\n          borderColor: activating ? 'orange' : connected ? 'green' : 'unset',\n          cursor: disabled ? 'unset' : 'pointer',\n          position: 'relative'\n        },\n        disabled: disabled,\n        key: name,\n        onClick: function onClick() {\n          setActivatingConnector(currentConnector);\n          activate(connectorsByName[name]);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          height: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          color: 'black',\n          margin: '0 0 0 1rem'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }, activating && __jsx(Spinner, {\n        color: 'black',\n        style: {\n          height: '25%',\n          marginLeft: '-1rem'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 30\n        }\n      }), connected && __jsx(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"check\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }\n      }, \"\\u2705\")), name);\n    })), __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 5\n      }\n    }, (active || error) && __jsx(\"button\", {\n      style: {\n        height: '3rem',\n        marginTop: '2rem',\n        borderRadius: '1rem',\n        borderColor: 'red',\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        deactivate();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }, \"Deactivate\"), !!error && __jsx(\"h4\", {\n      style: {\n        marginTop: '1rem',\n        marginBottom: '0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    }, getErrorMessage(error))), __jsx(\"hr\", {\n      style: {\n        margin: '2rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 5\n      }\n    }), __jsx(\"div\", {\n      style: {\n        display: 'grid',\n        gridGap: '1rem',\n        gridTemplateColumns: 'fit-content',\n        maxWidth: '20rem',\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 5\n      }\n    }, !!(library && account) && __jsx(\"button\", {\n      style: {\n        height: '3rem',\n        borderRadius: '1rem',\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        library.getSigner(account).signMessage('ðŸ‘‹').then(function (signature) {\n          window.alert(\"Success!\\n\\n\".concat(signature));\n        })[\"catch\"](function (error) {\n          window.alert('Failure!' + (error && error.message ? \"\\n\\n\".concat(error.message) : ''));\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }\n    }, \"Sign Message\"), !!(connector === connectorsByName[ConnectorNames.Network] && chainId) && __jsx(\"button\", {\n      style: {\n        height: '3rem',\n        borderRadius: '1rem',\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        ;\n        connector.changeChainId(chainId === 1 ? 4 : 1);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }\n    }, \"Switch Networks\"), connector === connectorsByName[ConnectorNames.WalletConnect] && __jsx(\"button\", {\n      style: {\n        height: '3rem',\n        borderRadius: '1rem',\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        ;\n        connector.close();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }\n    }, \"Kill WalletConnect Session\"), connector === connectorsByName[ConnectorNames.WalletLink] && __jsx(\"button\", {\n      style: {\n        height: '3rem',\n        borderRadius: '1rem',\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        ;\n        connector.close();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }\n    }, \"Kill WalletLink Session\"), connector === connectorsByName[ConnectorNames.Fortmatic] && __jsx(\"button\", {\n      style: {\n        height: '3rem',\n        borderRadius: '1rem',\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        ;\n        connector.close();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }\n    }, \"Kill Fortmatic Session\"), connector === connectorsByName[ConnectorNames.Magic] && __jsx(\"button\", {\n      style: {\n        height: '3rem',\n        borderRadius: '1rem',\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        ;\n        connector.close();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }\n    }, \"Kill Magic Session\"), connector === connectorsByName[ConnectorNames.Portis] && __jsx(React.Fragment, null, chainId !== undefined && __jsx(\"button\", {\n      style: {\n        height: '3rem',\n        borderRadius: '1rem',\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        ;\n        connector.changeNetwork(chainId === 1 ? 100 : 1);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 13\n      }\n    }, \"Switch Networks\"), __jsx(\"button\", {\n      style: {\n        height: '3rem',\n        borderRadius: '1rem',\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        ;\n        connector.close();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }\n    }, \"Kill Portis Session\")), connector === connectorsByName[ConnectorNames.Torus] && __jsx(\"button\", {\n      style: {\n        height: '3rem',\n        borderRadius: '1rem',\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        ;\n        connector.close();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }\n    }, \"Kill Torus Session\")));\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 8\n    }\n  });\n}\n\n_s(Wallet, \"oVtBozX5lH0j7w1/NhHB2/98yx0=\", false, function () {\n  return [useWeb3React, useEagerConnect, useInactiveListener];\n});\n\n_c = Wallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"sources":["C:/Users/rodri/web3_projects/blockchain-chess/Components/Wallets.tsx"],"names":["React","useWeb3React","UnsupportedChainIdError","NoEthereumProviderError","UserRejectedRequestError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","UserRejectedRequestErrorFrame","Web3Provider","useEagerConnect","useInactiveListener","injected","network","walletconnect","walletlink","ledger","trezor","lattice","frame","authereum","fortmatic","magic","portis","torus","Spinner","Wallet","openWallets","ConnectorNames","connectorsByName","Injected","Network","WalletConnect","WalletLink","Ledger","Trezor","Lattice","Frame","Authereum","Fortmatic","Magic","Portis","Torus","getErrorMessage","error","console","getLibrary","provider","library","pollingInterval","context","connector","chainId","account","activate","deactivate","active","useState","activatingConnector","setActivatingConnector","useEffect","undefined","triedEager","openWallet","margin","display","gridGap","gridTemplateColumns","maxWidth","Object","keys","map","name","currentConnector","activating","connected","disabled","height","borderRadius","borderColor","cursor","position","top","left","alignItems","color","marginLeft","flexDirection","marginTop","marginBottom","getSigner","signMessage","then","signature","window","alert","message","changeChainId","close","changeNetwork"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\r\n} from '@web3-react/injected-connector'\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector'\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from '@web3-react/frame-connector'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport { formatEther } from '@ethersproject/units'\r\n\r\nimport { useEagerConnect, useInactiveListener } from '../hooks'\r\nimport {\r\n  injected,\r\n  network,\r\n  walletconnect,\r\n  walletlink,\r\n  ledger,\r\n  trezor,\r\n  lattice,\r\n  frame,\r\n  authereum,\r\n  fortmatic,\r\n  magic,\r\n  portis,\r\n  torus\r\n} from '../connectors'\r\nimport { Spinner } from './Spinner'\r\n\r\n\r\n\r\nexport default function Wallet({openWallets}) {\r\n\r\n  enum ConnectorNames {\r\n    Injected = 'Injected',\r\n    Network = 'Network',\r\n    WalletConnect = 'WalletConnect',\r\n    WalletLink = 'WalletLink',\r\n    Ledger = 'Ledger',\r\n    Trezor = 'Trezor',\r\n    Lattice = 'Lattice',\r\n    Frame = 'Frame',\r\n    Authereum = 'Authereum',\r\n    Fortmatic = 'Fortmatic',\r\n    Magic = 'Magic',\r\n    Portis = 'Portis',\r\n    Torus = 'Torus'\r\n  }\r\n\r\nconst connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.Network]: network,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.WalletLink]: walletlink,\r\n  [ConnectorNames.Ledger]: ledger,\r\n  [ConnectorNames.Trezor]: trezor,\r\n  [ConnectorNames.Lattice]: lattice,\r\n  [ConnectorNames.Frame]: frame,\r\n  [ConnectorNames.Authereum]: authereum,\r\n  [ConnectorNames.Fortmatic]: fortmatic,\r\n  [ConnectorNames.Magic]: magic,\r\n  [ConnectorNames.Portis]: portis,\r\n  [ConnectorNames.Torus]: torus\r\n}\r\n\r\nfunction getErrorMessage(error: Error) {\r\n  if (error instanceof NoEthereumProviderError) {\r\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\r\n  } else if (error instanceof UnsupportedChainIdError) {\r\n    return \"You're connected to an unsupported network.\"\r\n  } else if (\r\n    error instanceof UserRejectedRequestErrorInjected ||\r\n    error instanceof UserRejectedRequestErrorWalletConnect ||\r\n    error instanceof UserRejectedRequestErrorFrame\r\n  ) {\r\n    return 'Please authorize this website to access your Ethereum account.'\r\n  } else {\r\n    console.error(error)\r\n    return 'An unknown error occurred. Check the console for more details.'\r\n  }\r\n}\r\n\r\nfunction getLibrary(provider: any): Web3Provider {\r\n  const library = new Web3Provider(provider)\r\n  library.pollingInterval = 12000\r\n  return library\r\n}\r\n\r\nconst context = useWeb3React<Web3Provider>()\r\nconst { connector, library, chainId, account, activate, deactivate, active, error } = context\r\n\r\n// handle logic to recognize the connector currently being activated\r\nconst [activatingConnector, setActivatingConnector] = React.useState<any>()\r\nReact.useEffect(() => {\r\n  if (activatingConnector && activatingConnector === connector) {\r\n    setActivatingConnector(undefined)\r\n  }\r\n}, [activatingConnector, connector])\r\n\r\n// handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\r\nconst triedEager = useEagerConnect()\r\n\r\n// handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\r\nuseInactiveListener(!triedEager || !!activatingConnector)\r\nif(openWallet === true){\r\nreturn (\r\n  <>\r\n    <hr style={{ margin: '2rem' }} />\r\n    <div\r\n      style={{\r\n        display: 'grid',\r\n        gridGap: '1rem',\r\n        gridTemplateColumns: '1fr 1fr',\r\n        maxWidth: '20rem',\r\n        margin: 'auto'\r\n      }}\r\n    >\r\n      {Object.keys(connectorsByName).map(name => {\r\n        const currentConnector = connectorsByName[name]\r\n        const activating = currentConnector === activatingConnector\r\n        const connected = currentConnector === connector\r\n        const disabled = !triedEager || !!activatingConnector || connected || !!error\r\n\r\n        return (\r\n          <button\r\n            style={{\r\n              height: '3rem',\r\n              borderRadius: '1rem',\r\n              borderColor: activating ? 'orange' : connected ? 'green' : 'unset',\r\n              cursor: disabled ? 'unset' : 'pointer',\r\n              position: 'relative'\r\n            }}\r\n            disabled={disabled}\r\n            key={name}\r\n            onClick={() => {\r\n              setActivatingConnector(currentConnector)\r\n              activate(connectorsByName[name])\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                top: '0',\r\n                left: '0',\r\n                height: '100%',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                color: 'black',\r\n                margin: '0 0 0 1rem'\r\n              }}\r\n            >\r\n              {activating && <Spinner color={'black'} style={{ height: '25%', marginLeft: '-1rem' }} />}\r\n              {connected && (\r\n                <span role=\"img\" aria-label=\"check\">\r\n                  âœ…\r\n                </span>\r\n              )}\r\n            </div>\r\n            {name}\r\n          </button>\r\n        )\r\n      })}\r\n    </div>\r\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n      {(active || error) && (\r\n        <button\r\n          style={{\r\n            height: '3rem',\r\n            marginTop: '2rem',\r\n            borderRadius: '1rem',\r\n            borderColor: 'red',\r\n            cursor: 'pointer'\r\n          }}\r\n          onClick={() => {\r\n            deactivate()\r\n          }}\r\n        >\r\n          Deactivate\r\n        </button>\r\n      )}\r\n\r\n      {!!error && <h4 style={{ marginTop: '1rem', marginBottom: '0' }}>{getErrorMessage(error)}</h4>}\r\n    </div>\r\n\r\n    <hr style={{ margin: '2rem' }} />\r\n\r\n    <div\r\n      style={{\r\n        display: 'grid',\r\n        gridGap: '1rem',\r\n        gridTemplateColumns: 'fit-content',\r\n        maxWidth: '20rem',\r\n        margin: 'auto'\r\n      }}\r\n    >\r\n      {!!(library && account) && (\r\n        <button\r\n          style={{\r\n            height: '3rem',\r\n            borderRadius: '1rem',\r\n            cursor: 'pointer'\r\n          }}\r\n          onClick={() => {\r\n            library\r\n              .getSigner(account)\r\n              .signMessage('ðŸ‘‹')\r\n              .then((signature: any) => {\r\n                window.alert(`Success!\\n\\n${signature}`)\r\n              })\r\n              .catch((error: any) => {\r\n                window.alert('Failure!' + (error && error.message ? `\\n\\n${error.message}` : ''))\r\n              })\r\n          }}\r\n        >\r\n          Sign Message\r\n        </button>\r\n      )}\r\n      {!!(connector === connectorsByName[ConnectorNames.Network] && chainId) && (\r\n        <button\r\n          style={{\r\n            height: '3rem',\r\n            borderRadius: '1rem',\r\n            cursor: 'pointer'\r\n          }}\r\n          onClick={() => {\r\n            ;(connector as any).changeChainId(chainId === 1 ? 4 : 1)\r\n          }}\r\n        >\r\n          Switch Networks\r\n        </button>\r\n      )}\r\n      {connector === connectorsByName[ConnectorNames.WalletConnect] && (\r\n        <button\r\n          style={{\r\n            height: '3rem',\r\n            borderRadius: '1rem',\r\n            cursor: 'pointer'\r\n          }}\r\n          onClick={() => {\r\n            ;(connector as any).close()\r\n          }}\r\n        >\r\n          Kill WalletConnect Session\r\n        </button>\r\n      )}\r\n      {connector === connectorsByName[ConnectorNames.WalletLink] && (\r\n        <button\r\n          style={{\r\n            height: '3rem',\r\n            borderRadius: '1rem',\r\n            cursor: 'pointer'\r\n          }}\r\n          onClick={() => {\r\n            ;(connector as any).close()\r\n          }}\r\n        >\r\n          Kill WalletLink Session\r\n        </button>\r\n      )}\r\n      {connector === connectorsByName[ConnectorNames.Fortmatic] && (\r\n        <button\r\n          style={{\r\n            height: '3rem',\r\n            borderRadius: '1rem',\r\n            cursor: 'pointer'\r\n          }}\r\n          onClick={() => {\r\n            ;(connector as any).close()\r\n          }}\r\n        >\r\n          Kill Fortmatic Session\r\n        </button>\r\n      )}\r\n      {connector === connectorsByName[ConnectorNames.Magic] && (\r\n        <button\r\n          style={{\r\n            height: '3rem',\r\n            borderRadius: '1rem',\r\n            cursor: 'pointer'\r\n          }}\r\n          onClick={() => {\r\n            ;(connector as any).close()\r\n          }}\r\n        >\r\n          Kill Magic Session\r\n        </button>\r\n      )}\r\n      {connector === connectorsByName[ConnectorNames.Portis] && (\r\n        <>\r\n          {chainId !== undefined && (\r\n            <button\r\n              style={{\r\n                height: '3rem',\r\n                borderRadius: '1rem',\r\n                cursor: 'pointer'\r\n              }}\r\n              onClick={() => {\r\n                ;(connector as any).changeNetwork(chainId === 1 ? 100 : 1)\r\n              }}\r\n            >\r\n              Switch Networks\r\n            </button>\r\n          )}\r\n          <button\r\n            style={{\r\n              height: '3rem',\r\n              borderRadius: '1rem',\r\n              cursor: 'pointer'\r\n            }}\r\n            onClick={() => {\r\n              ;(connector as any).close()\r\n            }}\r\n          >\r\n            Kill Portis Session\r\n          </button>\r\n        </>\r\n      )}\r\n      {connector === connectorsByName[ConnectorNames.Torus] && (\r\n        <button\r\n          style={{\r\n            height: '3rem',\r\n            borderRadius: '1rem',\r\n            cursor: 'pointer'\r\n          }}\r\n          onClick={() => {\r\n            ;(connector as any).close()\r\n          }}\r\n        >\r\n          Kill Torus Session\r\n        </button>\r\n      )}\r\n    </div>\r\n  </>\r\n)\r\n}\r\n\r\nreturn(<div />)\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}