{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\web3_projects\\\\web3-page\\\\web3-react\\\\example\\\\Components\\\\Balance.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport 'react-bootstrap';\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\nexport default function Balance() {\n  const {\n    account,\n    library,\n    chainId\n  } = useWeb3React();\n  const [balance, setBalance] = React.useState();\n  React.useEffect(() => {\n    if (!!account && !!library) {\n      let stale = false;\n      library.getBalance(account).then((balance = any) => {\n        if (!stale) {\n          setBalance(balance);\n        }\n      }).catch(() => {\n        if (!stale) {\n          setBalance(null);\n        }\n      });\n      return () => {\n        stale = true;\n        setBalance(undefined);\n      };\n    }\n  }, [account, library, chainId]); // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Balance\"), __jsx(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"gold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDCB0\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, balance === null ? 'Error' : balance ? `Îž${formatEther(balance)}` : ''));\n}","map":{"version":3,"sources":["C:/Users/rodri/web3_projects/web3-page/web3-react/example/Components/Balance.js"],"names":["React","useState","useEffect","Web3ReactProvider","useWeb3React","UnsupportedChainIdError","Balance","account","library","chainId","balance","setBalance","stale","getBalance","then","any","catch","undefined","formatEther"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAiB,iBAAjB;AACA,SAASC,iBAAT,EAA4BC,YAA5B,EAA0CC,uBAA1C,QAAyE,kBAAzE;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,MAAgCL,YAAY,EAAlD;AAEA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBX,KAAK,CAACC,QAAN,EAA9B;AACAD,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpB,QAAI,CAAC,CAACK,OAAF,IAAa,CAAC,CAACC,OAAnB,EAA4B;AAC1B,UAAII,KAAK,GAAG,KAAZ;AAEAJ,MAAAA,OAAO,CACJK,UADH,CACcN,OADd,EAEGO,IAFH,CAEQ,CAACJ,OAAO,GAAGK,GAAX,KAAmB;AACvB,YAAI,CAACH,KAAL,EAAY;AACVD,UAAAA,UAAU,CAACD,OAAD,CAAV;AACD;AACF,OANH,EAOGM,KAPH,CAOS,MAAM;AACX,YAAI,CAACJ,KAAL,EAAY;AACVD,UAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,OAXH;AAaA,aAAO,MAAM;AACXC,QAAAA,KAAK,GAAG,IAAR;AACAD,QAAAA,UAAU,CAACM,SAAD,CAAV;AACD,OAHD;AAID;AACF,GAtBD,EAsBG,CAACV,OAAD,EAAUC,OAAV,EAAmBC,OAAnB,CAtBH,EAJgC,CA0BA;;AAEhC,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,OAAO,KAAK,IAAZ,GAAmB,OAAnB,GAA6BA,OAAO,GAAI,IAAGQ,WAAW,CAACR,OAAD,CAAU,EAA5B,GAAgC,EAA3E,CALF,CADF;AASD","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {  } from 'react-bootstrap';\r\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\n\r\nexport default function Balance() {\r\n  const { account, library, chainId } = useWeb3React()\r\n\r\n  const [balance, setBalance] = React.useState()\r\n  React.useEffect(() => {\r\n    if (!!account && !!library) {\r\n      let stale = false\r\n\r\n      library\r\n        .getBalance(account)\r\n        .then((balance = any) => {\r\n          if (!stale) {\r\n            setBalance(balance)\r\n          }\r\n        })\r\n        .catch(() => {\r\n          if (!stale) {\r\n            setBalance(null)\r\n          }\r\n        })\r\n\r\n      return () => {\r\n        stale = true\r\n        setBalance(undefined)\r\n      }\r\n    }\r\n  }, [account, library, chainId]) // ensures refresh if referential identity of library doesn't change across chainIds\r\n\r\n  return (\r\n    <>\r\n      <span>Balance</span>\r\n      <span role=\"img\" aria-label=\"gold\">\r\n        ðŸ’°\r\n      </span>\r\n      <span>{balance === null ? 'Error' : balance ? `Îž${formatEther(balance)}` : ''}</span>\r\n    </>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}