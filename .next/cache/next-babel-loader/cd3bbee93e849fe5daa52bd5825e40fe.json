{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\rodri\\\\web3_projects\\\\blockchain-chess\\\\Components\\\\Balance.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Balance() {\n  _s();\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      library = _useWeb3React.library,\n      chainId = _useWeb3React.chainId;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      balance = _React$useState2[0],\n      setBalance = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (!!account && !!library) {\n      var stale = false;\n      library.getBalance(account).then(function (balance) {\n        if (!stale) {\n          setBalance(balance);\n        }\n      })[\"catch\"](function () {\n        if (!stale) {\n          setBalance(null);\n        }\n      });\n      return function () {\n        stale = true;\n        setBalance(undefined);\n      };\n    }\n  }, [account, library, chainId]); // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"gold\",\n      children: \"\\uD83D\\uDCB0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: balance === null ? 'Error' : balance ? \"\\u039E\".concat(formatEther(balance)) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Balance, \"M1WVM1XYBvl8/UPoZ+Zp2BzPIno=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = Balance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"sources":["C:/Users/rodri/web3_projects/blockchain-chess/Components/Balance.tsx"],"names":["React","useWeb3React","Balance","account","library","chainId","useState","balance","setBalance","useEffect","stale","getBalance","then","undefined","formatEther"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAA4BC,YAA5B,QAAyE,kBAAzE;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,sBAAsCD,YAAY,EAAlD;AAAA,MAAQE,OAAR,iBAAQA,OAAR;AAAA,MAAiBC,OAAjB,iBAAiBA,OAAjB;AAAA,MAA0BC,OAA1B,iBAA0BA,OAA1B;;AAEA,wBAA8BL,KAAK,CAACM,QAAN,EAA9B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACAR,EAAAA,KAAK,CAACS,SAAN,CAAgB,YAAW;AACzB,QAAI,CAAC,CAACN,OAAF,IAAa,CAAC,CAACC,OAAnB,EAA4B;AAC1B,UAAIM,KAAK,GAAG,KAAZ;AAEAN,MAAAA,OAAO,CACJO,UADH,CACcR,OADd,EAEGS,IAFH,CAEQ,UAACL,OAAD,EAAkB;AACtB,YAAI,CAACG,KAAL,EAAY;AACVF,UAAAA,UAAU,CAACD,OAAD,CAAV;AACD;AACF,OANH,WAOS,YAAM;AACX,YAAI,CAACG,KAAL,EAAY;AACVF,UAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,OAXH;AAaA,aAAO,YAAM;AACXE,QAAAA,KAAK,GAAG,IAAR;AACAF,QAAAA,UAAU,CAACK,SAAD,CAAV;AACD,OAHD;AAID;AACF,GAtBD,EAsBG,CAACV,OAAD,EAAUC,OAAV,EAAmBC,OAAnB,CAtBH,EAJiB,CA0Be;;AAEhC,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,IAAI,EAAC,KAAX;AAAiB,oBAAW,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAA,gBAAOE,OAAO,KAAK,IAAZ,GAAmB,OAAnB,GAA6BA,OAAO,mBAAOO,WAAW,CAACP,OAAD,CAAlB,IAAgC;AAA3E;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD;;GArCQL,O;UAC+BD,Y;;;KAD/BC,O","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\n\r\nfunction Balance() {\r\n  const { account, library, chainId } = useWeb3React()\r\n\r\n  const [balance, setBalance] = React.useState()\r\n  React.useEffect((): any => {\r\n    if (!!account && !!library) {\r\n      let stale = false\r\n\r\n      library\r\n        .getBalance(account)\r\n        .then((balance: any) => {\r\n          if (!stale) {\r\n            setBalance(balance)\r\n          }\r\n        })\r\n        .catch(() => {\r\n          if (!stale) {\r\n            setBalance(null)\r\n          }\r\n        })\r\n\r\n      return () => {\r\n        stale = true\r\n        setBalance(undefined)\r\n      }\r\n    }\r\n  }, [account, library, chainId]) // ensures refresh if referential identity of library doesn't change across chainIds\r\n\r\n  return (\r\n    <>\r\n      <span>Balance</span>\r\n      <span role=\"img\" aria-label=\"gold\">\r\n        ðŸ’°\r\n      </span>\r\n      <span>{balance === null ? 'Error' : balance ? `Îž${formatEther(balance)}` : ''}</span>\r\n    </>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}