{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\web3_projects\\\\blockchain-chess\\\\Components\\\\Wallets.tsx\";\nimport React from 'react';\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\nimport { NoEthereumProviderError, UserRejectedRequestError as UserRejectedRequestErrorInjected } from '@web3-react/injected-connector';\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector';\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from '@web3-react/frame-connector';\nimport { Web3Provider } from '@ethersproject/providers';\nimport { useEagerConnect, useInactiveListener } from '../hooks';\nimport { injected, network, walletconnect, walletlink, ledger, trezor, lattice, frame, authereum, fortmatic, magic, portis, torus } from '../connectors';\nimport { Spinner } from './Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Wallet({\n  openWallets\n}) {\n  let ConnectorNames;\n\n  (function (ConnectorNames) {\n    ConnectorNames[\"Injected\"] = \"Injected\";\n    ConnectorNames[\"Network\"] = \"Network\";\n    ConnectorNames[\"WalletConnect\"] = \"WalletConnect\";\n    ConnectorNames[\"WalletLink\"] = \"WalletLink\";\n    ConnectorNames[\"Ledger\"] = \"Ledger\";\n    ConnectorNames[\"Trezor\"] = \"Trezor\";\n    ConnectorNames[\"Lattice\"] = \"Lattice\";\n    ConnectorNames[\"Frame\"] = \"Frame\";\n    ConnectorNames[\"Authereum\"] = \"Authereum\";\n    ConnectorNames[\"Fortmatic\"] = \"Fortmatic\";\n    ConnectorNames[\"Magic\"] = \"Magic\";\n    ConnectorNames[\"Portis\"] = \"Portis\";\n    ConnectorNames[\"Torus\"] = \"Torus\";\n  })(ConnectorNames || (ConnectorNames = {}));\n\n  const connectorsByName = {\n    [ConnectorNames.Injected]: injected,\n    [ConnectorNames.Network]: network,\n    [ConnectorNames.WalletConnect]: walletconnect,\n    [ConnectorNames.WalletLink]: walletlink,\n    [ConnectorNames.Ledger]: ledger,\n    [ConnectorNames.Trezor]: trezor,\n    [ConnectorNames.Lattice]: lattice,\n    [ConnectorNames.Frame]: frame,\n    [ConnectorNames.Authereum]: authereum,\n    [ConnectorNames.Fortmatic]: fortmatic,\n    [ConnectorNames.Magic]: magic,\n    [ConnectorNames.Portis]: portis,\n    [ConnectorNames.Torus]: torus\n  };\n\n  function getErrorMessage(error) {\n    if (error instanceof NoEthereumProviderError) {\n      return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.';\n    } else if (error instanceof UnsupportedChainIdError) {\n      return \"You're connected to an unsupported network.\";\n    } else if (error instanceof UserRejectedRequestErrorInjected || error instanceof UserRejectedRequestErrorWalletConnect || error instanceof UserRejectedRequestErrorFrame) {\n      return 'Please authorize this website to access your Ethereum account.';\n    } else {\n      console.error(error);\n      return 'An unknown error occurred. Check the console for more details.';\n    }\n  }\n\n  function getLibrary(provider) {\n    const library = new Web3Provider(provider);\n    library.pollingInterval = 12000;\n    return library;\n  }\n\n  const context = useWeb3React();\n  const {\n    connector,\n    library,\n    chainId,\n    account,\n    activate,\n    deactivate,\n    active,\n    error\n  } = context; // handle logic to recognize the connector currently being activated\n\n  const [activatingConnector, setActivatingConnector] = React.useState();\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined);\n    }\n  }, [activatingConnector, connector]); // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n\n  const triedEager = useEagerConnect(); // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n\n  useInactiveListener(!triedEager || !!activatingConnector);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '2rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridGap: '1rem',\n        gridTemplateColumns: '1fr 1fr',\n        maxWidth: '20rem',\n        margin: 'auto'\n      },\n      children: Object.keys(connectorsByName).map(name => {\n        const currentConnector = connectorsByName[name];\n        const activating = currentConnector === activatingConnector;\n        const connected = currentConnector === connector;\n        const disabled = !triedEager || !!activatingConnector || connected || !!error;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            height: '3rem',\n            borderRadius: '1rem',\n            borderColor: activating ? 'orange' : connected ? 'green' : 'unset',\n            cursor: disabled ? 'unset' : 'pointer',\n            position: 'relative'\n          },\n          disabled: disabled,\n          onClick: () => {\n            setActivatingConnector(currentConnector);\n            activate(connectorsByName[name]);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: '0',\n              left: '0',\n              height: '100%',\n              display: 'flex',\n              alignItems: 'center',\n              color: 'black',\n              margin: '0 0 0 1rem'\n            },\n            children: [activating && /*#__PURE__*/_jsxDEV(Spinner, {\n              color: 'black',\n              style: {\n                height: '25%',\n                marginLeft: '-1rem'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 30\n            }, this), connected && /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"check\",\n              children: \"\\u2705\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), name]\n        }, name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [(active || error) && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          height: '3rem',\n          marginTop: '2rem',\n          borderRadius: '1rem',\n          borderColor: 'red',\n          cursor: 'pointer'\n        },\n        onClick: () => {\n          deactivate();\n        },\n        children: \"Deactivate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), !!error && /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          marginTop: '1rem',\n          marginBottom: '0'\n        },\n        children: getErrorMessage(error)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '2rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridGap: '1rem',\n        gridTemplateColumns: 'fit-content',\n        maxWidth: '20rem',\n        margin: 'auto'\n      },\n      children: [!!(library && account) && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          height: '3rem',\n          borderRadius: '1rem',\n          cursor: 'pointer'\n        },\n        onClick: () => {\n          library.getSigner(account).signMessage('ðŸ‘‹').then(signature => {\n            window.alert(`Success!\\n\\n${signature}`);\n          }).catch(error => {\n            window.alert('Failure!' + (error && error.message ? `\\n\\n${error.message}` : ''));\n          });\n        },\n        children: \"Sign Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), !!(connector === connectorsByName[ConnectorNames.Network] && chainId) && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          height: '3rem',\n          borderRadius: '1rem',\n          cursor: 'pointer'\n        },\n        onClick: () => {\n          ;\n          connector.changeChainId(chainId === 1 ? 4 : 1);\n        },\n        children: \"Switch Networks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), connector === connectorsByName[ConnectorNames.WalletConnect] && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          height: '3rem',\n          borderRadius: '1rem',\n          cursor: 'pointer'\n        },\n        onClick: () => {\n          ;\n          connector.close();\n        },\n        children: \"Kill WalletConnect Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), connector === connectorsByName[ConnectorNames.WalletLink] && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          height: '3rem',\n          borderRadius: '1rem',\n          cursor: 'pointer'\n        },\n        onClick: () => {\n          ;\n          connector.close();\n        },\n        children: \"Kill WalletLink Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), connector === connectorsByName[ConnectorNames.Fortmatic] && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          height: '3rem',\n          borderRadius: '1rem',\n          cursor: 'pointer'\n        },\n        onClick: () => {\n          ;\n          connector.close();\n        },\n        children: \"Kill Fortmatic Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), connector === connectorsByName[ConnectorNames.Magic] && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          height: '3rem',\n          borderRadius: '1rem',\n          cursor: 'pointer'\n        },\n        onClick: () => {\n          ;\n          connector.close();\n        },\n        children: \"Kill Magic Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), connector === connectorsByName[ConnectorNames.Portis] && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [chainId !== undefined && /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            height: '3rem',\n            borderRadius: '1rem',\n            cursor: 'pointer'\n          },\n          onClick: () => {\n            ;\n            connector.changeNetwork(chainId === 1 ? 100 : 1);\n          },\n          children: \"Switch Networks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            height: '3rem',\n            borderRadius: '1rem',\n            cursor: 'pointer'\n          },\n          onClick: () => {\n            ;\n            connector.close();\n          },\n          children: \"Kill Portis Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true), connector === connectorsByName[ConnectorNames.Torus] && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          height: '3rem',\n          borderRadius: '1rem',\n          cursor: 'pointer'\n        },\n        onClick: () => {\n          ;\n          connector.close();\n        },\n        children: \"Kill Torus Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["C:/Users/rodri/web3_projects/blockchain-chess/Components/Wallets.tsx"],"names":["React","useWeb3React","UnsupportedChainIdError","NoEthereumProviderError","UserRejectedRequestError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","UserRejectedRequestErrorFrame","Web3Provider","useEagerConnect","useInactiveListener","injected","network","walletconnect","walletlink","ledger","trezor","lattice","frame","authereum","fortmatic","magic","portis","torus","Spinner","Wallet","openWallets","ConnectorNames","connectorsByName","Injected","Network","WalletConnect","WalletLink","Ledger","Trezor","Lattice","Frame","Authereum","Fortmatic","Magic","Portis","Torus","getErrorMessage","error","console","getLibrary","provider","library","pollingInterval","context","connector","chainId","account","activate","deactivate","active","activatingConnector","setActivatingConnector","useState","useEffect","undefined","triedEager","margin","display","gridGap","gridTemplateColumns","maxWidth","Object","keys","map","name","currentConnector","activating","connected","disabled","height","borderRadius","borderColor","cursor","position","top","left","alignItems","color","marginLeft","flexDirection","marginTop","marginBottom","getSigner","signMessage","then","signature","window","alert","catch","message","changeChainId","close","changeNetwork"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\r\n} from '@web3-react/injected-connector'\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector'\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from '@web3-react/frame-connector'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport { formatEther } from '@ethersproject/units'\r\n\r\nimport { useEagerConnect, useInactiveListener } from '../hooks'\r\nimport {\r\n  injected,\r\n  network,\r\n  walletconnect,\r\n  walletlink,\r\n  ledger,\r\n  trezor,\r\n  lattice,\r\n  frame,\r\n  authereum,\r\n  fortmatic,\r\n  magic,\r\n  portis,\r\n  torus\r\n} from '../connectors'\r\nimport { Spinner } from './Spinner'\r\n\r\n\r\n\r\nexport default function Wallet({openWallets}) {\r\n\r\n  enum ConnectorNames {\r\n    Injected = 'Injected',\r\n    Network = 'Network',\r\n    WalletConnect = 'WalletConnect',\r\n    WalletLink = 'WalletLink',\r\n    Ledger = 'Ledger',\r\n    Trezor = 'Trezor',\r\n    Lattice = 'Lattice',\r\n    Frame = 'Frame',\r\n    Authereum = 'Authereum',\r\n    Fortmatic = 'Fortmatic',\r\n    Magic = 'Magic',\r\n    Portis = 'Portis',\r\n    Torus = 'Torus'\r\n  }\r\n\r\nconst connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.Network]: network,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.WalletLink]: walletlink,\r\n  [ConnectorNames.Ledger]: ledger,\r\n  [ConnectorNames.Trezor]: trezor,\r\n  [ConnectorNames.Lattice]: lattice,\r\n  [ConnectorNames.Frame]: frame,\r\n  [ConnectorNames.Authereum]: authereum,\r\n  [ConnectorNames.Fortmatic]: fortmatic,\r\n  [ConnectorNames.Magic]: magic,\r\n  [ConnectorNames.Portis]: portis,\r\n  [ConnectorNames.Torus]: torus\r\n}\r\n\r\nfunction getErrorMessage(error: Error) {\r\n  if (error instanceof NoEthereumProviderError) {\r\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\r\n  } else if (error instanceof UnsupportedChainIdError) {\r\n    return \"You're connected to an unsupported network.\"\r\n  } else if (\r\n    error instanceof UserRejectedRequestErrorInjected ||\r\n    error instanceof UserRejectedRequestErrorWalletConnect ||\r\n    error instanceof UserRejectedRequestErrorFrame\r\n  ) {\r\n    return 'Please authorize this website to access your Ethereum account.'\r\n  } else {\r\n    console.error(error)\r\n    return 'An unknown error occurred. Check the console for more details.'\r\n  }\r\n}\r\n\r\nfunction getLibrary(provider: any): Web3Provider {\r\n  const library = new Web3Provider(provider)\r\n  library.pollingInterval = 12000\r\n  return library\r\n}\r\n\r\nconst context = useWeb3React<Web3Provider>()\r\nconst { connector, library, chainId, account, activate, deactivate, active, error } = context\r\n\r\n// handle logic to recognize the connector currently being activated\r\nconst [activatingConnector, setActivatingConnector] = React.useState<any>()\r\nReact.useEffect(() => {\r\n  if (activatingConnector && activatingConnector === connector) {\r\n    setActivatingConnector(undefined)\r\n  }\r\n}, [activatingConnector, connector])\r\n\r\n// handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\r\nconst triedEager = useEagerConnect()\r\n\r\n// handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\r\nuseInactiveListener(!triedEager || !!activatingConnector)\r\nreturn (\r\n  <>\r\n    <hr style={{ margin: '2rem' }} />\r\n    <div\r\n      style={{\r\n        display: 'grid',\r\n        gridGap: '1rem',\r\n        gridTemplateColumns: '1fr 1fr',\r\n        maxWidth: '20rem',\r\n        margin: 'auto'\r\n      }}\r\n    >\r\n      {Object.keys(connectorsByName).map(name => {\r\n        const currentConnector = connectorsByName[name]\r\n        const activating = currentConnector === activatingConnector\r\n        const connected = currentConnector === connector\r\n        const disabled = !triedEager || !!activatingConnector || connected || !!error\r\n\r\n        return (\r\n          <button\r\n            style={{\r\n              height: '3rem',\r\n              borderRadius: '1rem',\r\n              borderColor: activating ? 'orange' : connected ? 'green' : 'unset',\r\n              cursor: disabled ? 'unset' : 'pointer',\r\n              position: 'relative'\r\n            }}\r\n            disabled={disabled}\r\n            key={name}\r\n            onClick={() => {\r\n              setActivatingConnector(currentConnector)\r\n              activate(connectorsByName[name])\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                top: '0',\r\n                left: '0',\r\n                height: '100%',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                color: 'black',\r\n                margin: '0 0 0 1rem'\r\n              }}\r\n            >\r\n              {activating && <Spinner color={'black'} style={{ height: '25%', marginLeft: '-1rem' }} />}\r\n              {connected && (\r\n                <span role=\"img\" aria-label=\"check\">\r\n                  âœ…\r\n                </span>\r\n              )}\r\n            </div>\r\n            {name}\r\n          </button>\r\n        )\r\n      })}\r\n    </div>\r\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n      {(active || error) && (\r\n        <button\r\n          style={{\r\n            height: '3rem',\r\n            marginTop: '2rem',\r\n            borderRadius: '1rem',\r\n            borderColor: 'red',\r\n            cursor: 'pointer'\r\n          }}\r\n          onClick={() => {\r\n            deactivate()\r\n          }}\r\n        >\r\n          Deactivate\r\n        </button>\r\n      )}\r\n\r\n      {!!error && <h4 style={{ marginTop: '1rem', marginBottom: '0' }}>{getErrorMessage(error)}</h4>}\r\n    </div>\r\n\r\n    <hr style={{ margin: '2rem' }} />\r\n\r\n    <div\r\n      style={{\r\n        display: 'grid',\r\n        gridGap: '1rem',\r\n        gridTemplateColumns: 'fit-content',\r\n        maxWidth: '20rem',\r\n        margin: 'auto'\r\n      }}\r\n    >\r\n      {!!(library && account) && (\r\n        <button\r\n          style={{\r\n            height: '3rem',\r\n            borderRadius: '1rem',\r\n            cursor: 'pointer'\r\n          }}\r\n          onClick={() => {\r\n            library\r\n              .getSigner(account)\r\n              .signMessage('ðŸ‘‹')\r\n              .then((signature: any) => {\r\n                window.alert(`Success!\\n\\n${signature}`)\r\n              })\r\n              .catch((error: any) => {\r\n                window.alert('Failure!' + (error && error.message ? `\\n\\n${error.message}` : ''))\r\n              })\r\n          }}\r\n        >\r\n          Sign Message\r\n        </button>\r\n      )}\r\n      {!!(connector === connectorsByName[ConnectorNames.Network] && chainId) && (\r\n        <button\r\n          style={{\r\n            height: '3rem',\r\n            borderRadius: '1rem',\r\n            cursor: 'pointer'\r\n          }}\r\n          onClick={() => {\r\n            ;(connector as any).changeChainId(chainId === 1 ? 4 : 1)\r\n          }}\r\n        >\r\n          Switch Networks\r\n        </button>\r\n      )}\r\n      {connector === connectorsByName[ConnectorNames.WalletConnect] && (\r\n        <button\r\n          style={{\r\n            height: '3rem',\r\n            borderRadius: '1rem',\r\n            cursor: 'pointer'\r\n          }}\r\n          onClick={() => {\r\n            ;(connector as any).close()\r\n          }}\r\n        >\r\n          Kill WalletConnect Session\r\n        </button>\r\n      )}\r\n      {connector === connectorsByName[ConnectorNames.WalletLink] && (\r\n        <button\r\n          style={{\r\n            height: '3rem',\r\n            borderRadius: '1rem',\r\n            cursor: 'pointer'\r\n          }}\r\n          onClick={() => {\r\n            ;(connector as any).close()\r\n          }}\r\n        >\r\n          Kill WalletLink Session\r\n        </button>\r\n      )}\r\n      {connector === connectorsByName[ConnectorNames.Fortmatic] && (\r\n        <button\r\n          style={{\r\n            height: '3rem',\r\n            borderRadius: '1rem',\r\n            cursor: 'pointer'\r\n          }}\r\n          onClick={() => {\r\n            ;(connector as any).close()\r\n          }}\r\n        >\r\n          Kill Fortmatic Session\r\n        </button>\r\n      )}\r\n      {connector === connectorsByName[ConnectorNames.Magic] && (\r\n        <button\r\n          style={{\r\n            height: '3rem',\r\n            borderRadius: '1rem',\r\n            cursor: 'pointer'\r\n          }}\r\n          onClick={() => {\r\n            ;(connector as any).close()\r\n          }}\r\n        >\r\n          Kill Magic Session\r\n        </button>\r\n      )}\r\n      {connector === connectorsByName[ConnectorNames.Portis] && (\r\n        <>\r\n          {chainId !== undefined && (\r\n            <button\r\n              style={{\r\n                height: '3rem',\r\n                borderRadius: '1rem',\r\n                cursor: 'pointer'\r\n              }}\r\n              onClick={() => {\r\n                ;(connector as any).changeNetwork(chainId === 1 ? 100 : 1)\r\n              }}\r\n            >\r\n              Switch Networks\r\n            </button>\r\n          )}\r\n          <button\r\n            style={{\r\n              height: '3rem',\r\n              borderRadius: '1rem',\r\n              cursor: 'pointer'\r\n            }}\r\n            onClick={() => {\r\n              ;(connector as any).close()\r\n            }}\r\n          >\r\n            Kill Portis Session\r\n          </button>\r\n        </>\r\n      )}\r\n      {connector === connectorsByName[ConnectorNames.Torus] && (\r\n        <button\r\n          style={{\r\n            height: '3rem',\r\n            borderRadius: '1rem',\r\n            cursor: 'pointer'\r\n          }}\r\n          onClick={() => {\r\n            ;(connector as any).close()\r\n          }}\r\n        >\r\n          Kill Torus Session\r\n        </button>\r\n      )}\r\n    </div>\r\n  </>\r\n)\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}