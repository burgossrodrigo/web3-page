{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\rodri\\\\web3_projects\\\\blockchain-chess\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Web3ReactProvider } from '@web3-react/core';\nimport { Web3Provider } from '@ethersproject/providers';\nimport Header from '../Components/Header';\nimport Wallets from '../Components/Wallets.tsx';\n\nfunction getLibrary(provider) {\n  var library = new Web3Provider(provider);\n  library.pollingInterval = 12000;\n  return library;\n}\n\nexport default function (_ref) {\n  var openWallets = _ref.openWallets;\n  console.log(openWallets);\n  return __jsx(Web3ReactProvider, {\n    getLibrary: getLibrary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), openWallets === true ? __jsx(Wallets, _extends({}, Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  })) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 55\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/rodri/web3_projects/blockchain-chess/pages/index.tsx"],"names":["React","Web3ReactProvider","Web3Provider","Header","Wallets","getLibrary","provider","library","pollingInterval","openWallets","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAASC,iBAAT,QAAyE,kBAAzE;AAOA,SAASC,YAAT,QAA6B,0BAA7B;AAGA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,OAAP,MAAoB,2BAApB;;AAoBA,SAASC,UAAT,CAAoBC,QAApB,EAAiD;AAC/C,MAAMC,OAAO,GAAG,IAAIL,YAAJ,CAAiBI,QAAjB,CAAhB;AACAC,EAAAA,OAAO,CAACC,eAAR,GAA0B,KAA1B;AACA,SAAOD,OAAP;AACD;;AAID,eAAe,gBAAwB;AAAA,MAAdE,WAAc,QAAdA,WAAc;AAEvCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AAEE,SACE,MAAC,iBAAD;AAAmB,IAAA,UAAU,EAAEJ,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAECI,WAAW,KAAK,IAAhB,GAAuB,MAAC,OAAD,eAAaN,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAvB,GAAiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFlD,CADF;AAMD","sourcesContent":["import React, { useState } from 'react'\r\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\r\n} from '@web3-react/injected-connector'\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector'\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from '@web3-react/frame-connector'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport { formatEther } from '@ethersproject/units'\r\nimport Navigation from '../Components/Navigation'\r\nimport Header from '../Components/Header'\r\nimport ChainId from '../Components/ChainId'\r\nimport Wallets from '../Components/Wallets.tsx'\r\n\r\nimport { useEagerConnect, useInactiveListener } from '../hooks'\r\nimport {\r\n  injected,\r\n  network,\r\n  walletconnect,\r\n  walletlink,\r\n  ledger,\r\n  trezor,\r\n  lattice,\r\n  frame,\r\n  authereum,\r\n  fortmatic,\r\n  magic,\r\n  portis,\r\n  torus\r\n} from '../connectors'\r\nimport { Spinner } from '../components/Spinner'\r\n\r\nfunction getLibrary(provider: any): Web3Provider {\r\n  const library = new Web3Provider(provider)\r\n  library.pollingInterval = 12000\r\n  return library\r\n}\r\n\r\n\r\n\r\nexport default function({openWallets}) {\r\n\r\nconsole.log(openWallets);\r\n\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Header />\r\n\t  { openWallets === true ? <Wallets {...Header} /> : <div />}\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}