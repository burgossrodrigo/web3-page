{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _connectorsByName,\n    _jsxFileName = \"C:\\\\Users\\\\rodri\\\\web3_projects\\\\web3-page\\\\web3-react\\\\example\\\\pages\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\nimport { NoEthereumProviderError, UserRejectedRequestError as UserRejectedRequestErrorInjected } from '@web3-react/injected-connector';\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector';\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from '@web3-react/frame-connector';\nimport { Web3Provider } from '@ethersproject/providers';\nimport Navigation from '../Components/Navigation';\nimport Header from '../Components/Header';\nimport { useEagerConnect, useInactiveListener } from '../hooks';\nimport { injected, network, walletconnect, walletlink, ledger, trezor, lattice, frame, authereum, fortmatic, magic, portis, torus } from '../connectors';\nimport { Spinner } from '../components/Spinner';\nvar ConnectorNames;\n\n(function (ConnectorNames) {\n  ConnectorNames[\"Injected\"] = \"Injected\";\n  ConnectorNames[\"Network\"] = \"Network\";\n  ConnectorNames[\"WalletConnect\"] = \"WalletConnect\";\n  ConnectorNames[\"WalletLink\"] = \"WalletLink\";\n  ConnectorNames[\"Ledger\"] = \"Ledger\";\n  ConnectorNames[\"Trezor\"] = \"Trezor\";\n  ConnectorNames[\"Lattice\"] = \"Lattice\";\n  ConnectorNames[\"Frame\"] = \"Frame\";\n  ConnectorNames[\"Authereum\"] = \"Authereum\";\n  ConnectorNames[\"Fortmatic\"] = \"Fortmatic\";\n  ConnectorNames[\"Magic\"] = \"Magic\";\n  ConnectorNames[\"Portis\"] = \"Portis\";\n  ConnectorNames[\"Torus\"] = \"Torus\";\n})(ConnectorNames || (ConnectorNames = {}));\n\nvar connectorsByName = (_connectorsByName = {}, _defineProperty(_connectorsByName, ConnectorNames.Injected, injected), _defineProperty(_connectorsByName, ConnectorNames.Network, network), _defineProperty(_connectorsByName, ConnectorNames.WalletConnect, walletconnect), _defineProperty(_connectorsByName, ConnectorNames.WalletLink, walletlink), _defineProperty(_connectorsByName, ConnectorNames.Ledger, ledger), _defineProperty(_connectorsByName, ConnectorNames.Trezor, trezor), _defineProperty(_connectorsByName, ConnectorNames.Lattice, lattice), _defineProperty(_connectorsByName, ConnectorNames.Frame, frame), _defineProperty(_connectorsByName, ConnectorNames.Authereum, authereum), _defineProperty(_connectorsByName, ConnectorNames.Fortmatic, fortmatic), _defineProperty(_connectorsByName, ConnectorNames.Magic, magic), _defineProperty(_connectorsByName, ConnectorNames.Portis, portis), _defineProperty(_connectorsByName, ConnectorNames.Torus, torus), _connectorsByName);\n\nfunction getErrorMessage(error) {\n  if (error instanceof NoEthereumProviderError) {\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.';\n  } else if (error instanceof UnsupportedChainIdError) {\n    return \"You're connected to an unsupported network.\";\n  } else if (error instanceof UserRejectedRequestErrorInjected || error instanceof UserRejectedRequestErrorWalletConnect || error instanceof UserRejectedRequestErrorFrame) {\n    return 'Please authorize this website to access your Ethereum account.';\n  } else {\n    console.error(error);\n    return 'An unknown error occurred. Check the console for more details.';\n  }\n}\n\nfunction getLibrary(provider) {\n  var library = new Web3Provider(provider);\n  library.pollingInterval = 12000;\n  return library;\n}\n\nexport default function () {\n  return __jsx(Web3ReactProvider, {\n    getLibrary: getLibrary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, __jsx(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction App(openWallet, setOpenWallet) {\n  _s();\n\n  var _this = this;\n\n  var context = useWeb3React();\n  var connector = context.connector,\n      library = context.library,\n      chainId = context.chainId,\n      account = context.account,\n      activate = context.activate,\n      deactivate = context.deactivate,\n      active = context.active,\n      error = context.error; // handle logic to recognize the connector currently being activated\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activatingConnector = _React$useState2[0],\n      setActivatingConnector = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined);\n    }\n  }, [activatingConnector, connector]); // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n\n  var triedEager = useEagerConnect(); // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n\n  useInactiveListener(!triedEager || !!activatingConnector);\n\n  if (openWallet === false) {\n    __jsx(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 4\n      }\n    });\n\n    return __jsx(React.Fragment, null, __jsx(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 4\n      }\n    }), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 4\n      }\n    }, \"Open you wallet\"));\n  } else {\n    return __jsx(React.Fragment, null, __jsx(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }), __jsx(\"hr\", {\n      style: {\n        margin: '2rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }), __jsx(\"div\", {\n      style: {\n        display: 'grid',\n        gridGap: '1rem',\n        gridTemplateColumns: '1fr',\n        maxWidth: '20rem',\n        margin: 'auto',\n        \"float\": 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }, Object.keys(connectorsByName).map(function (name) {\n      var currentConnector = connectorsByName[name];\n      var activating = currentConnector === activatingConnector;\n      var connected = currentConnector === connector;\n      var disabled = !triedEager || !!activatingConnector || connected || !!error;\n      return __jsx(\"button\", {\n        style: {\n          height: '3rem',\n          borderRadius: '1rem',\n          borderColor: activating ? 'orange' : connected ? 'green' : 'unset',\n          cursor: disabled ? 'unset' : 'pointer',\n          position: 'relative'\n        },\n        disabled: disabled,\n        key: name,\n        onClick: function onClick() {\n          setActivatingConnector(currentConnector);\n          activate(connectorsByName[name]);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          height: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          color: 'black',\n          margin: '0 0 0 1rem'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }\n      }, activating && __jsx(Spinner, {\n        color: 'black',\n        style: {\n          height: '25%',\n          marginLeft: '-1rem'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 32\n        }\n      }), connected && __jsx(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"check\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 19\n        }\n      }, \"\\u2705\")), name);\n    })), __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }\n    }, (active || error) && __jsx(\"button\", {\n      style: {\n        height: '3rem',\n        marginTop: '2rem',\n        borderRadius: '1rem',\n        borderColor: 'red',\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        deactivate();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    }, \"Deactivate\"), !!error && __jsx(\"h4\", {\n      style: {\n        marginTop: '1rem',\n        marginBottom: '0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, getErrorMessage(error))), __jsx(\"hr\", {\n      style: {\n        margin: '2rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 7\n      }\n    }), __jsx(\"div\", {\n      style: {\n        display: 'grid',\n        gridGap: '1rem',\n        gridTemplateColumns: 'fit-content',\n        maxWidth: '20rem',\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 7\n      }\n    }, !!(library && account) && __jsx(\"button\", {\n      style: {\n        height: '3rem',\n        borderRadius: '1rem',\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        library.getSigner(account).signMessage('👋').then(function (signature) {\n          window.alert(\"Success!\\n\\n\".concat(signature));\n        })[\"catch\"](function (error) {\n          window.alert('Failure!' + (error && error.message ? \"\\n\\n\".concat(error.message) : ''));\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    }, \"Sign Message\"), !!(connector === connectorsByName[ConnectorNames.Network] && chainId) && __jsx(\"button\", {\n      style: {\n        height: '3rem',\n        borderRadius: '1rem',\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        ;\n        connector.changeChainId(chainId === 1 ? 4 : 1);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }\n    }, \"Switch Networks\"), connector === connectorsByName[ConnectorNames.WalletConnect] && __jsx(\"button\", {\n      style: {\n        height: '3rem',\n        borderRadius: '1rem',\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        ;\n        connector.close();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }\n    }, \"Kill WalletConnect Session\"), connector === connectorsByName[ConnectorNames.WalletLink] && __jsx(\"button\", {\n      style: {\n        height: '3rem',\n        borderRadius: '1rem',\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        ;\n        connector.close();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }\n    }, \"Kill WalletLink Session\"), connector === connectorsByName[ConnectorNames.Fortmatic] && __jsx(\"button\", {\n      style: {\n        height: '3rem',\n        borderRadius: '1rem',\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        ;\n        connector.close();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }\n    }, \"Kill Fortmatic Session\"), connector === connectorsByName[ConnectorNames.Magic] && __jsx(\"button\", {\n      style: {\n        height: '3rem',\n        borderRadius: '1rem',\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        ;\n        connector.close();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }\n    }, \"Kill Magic Session\"), connector === connectorsByName[ConnectorNames.Portis] && __jsx(React.Fragment, null, chainId !== undefined && __jsx(\"button\", {\n      style: {\n        height: '3rem',\n        borderRadius: '1rem',\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        ;\n        connector.changeNetwork(chainId === 1 ? 100 : 1);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 15\n      }\n    }, \"Switch Networks\"), __jsx(\"button\", {\n      style: {\n        height: '3rem',\n        borderRadius: '1rem',\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        ;\n        connector.close();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }\n    }, \"Kill Portis Session\")), connector === connectorsByName[ConnectorNames.Torus] && __jsx(\"button\", {\n      style: {\n        height: '3rem',\n        borderRadius: '1rem',\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        ;\n        connector.close();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }\n    }, \"Kill Torus Session\")));\n  }\n}\n\n_s(App, \"oVtBozX5lH0j7w1/NhHB2/98yx0=\", false, function () {\n  return [useWeb3React, useEagerConnect, useInactiveListener];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/rodri/web3_projects/web3-page/web3-react/example/pages/index.tsx"],"names":["React","Web3ReactProvider","useWeb3React","UnsupportedChainIdError","NoEthereumProviderError","UserRejectedRequestError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","UserRejectedRequestErrorFrame","Web3Provider","Navigation","Header","useEagerConnect","useInactiveListener","injected","network","walletconnect","walletlink","ledger","trezor","lattice","frame","authereum","fortmatic","magic","portis","torus","Spinner","ConnectorNames","connectorsByName","Injected","Network","WalletConnect","WalletLink","Ledger","Trezor","Lattice","Frame","Authereum","Fortmatic","Magic","Portis","Torus","getErrorMessage","error","console","getLibrary","provider","library","pollingInterval","App","openWallet","setOpenWallet","context","connector","chainId","account","activate","deactivate","active","useState","activatingConnector","setActivatingConnector","useEffect","undefined","triedEager","margin","display","gridGap","gridTemplateColumns","maxWidth","Object","keys","map","name","currentConnector","activating","connected","disabled","height","borderRadius","borderColor","cursor","position","top","left","alignItems","color","marginLeft","flexDirection","marginTop","marginBottom","getSigner","signMessage","then","signature","window","alert","message","changeChainId","close","changeNetwork"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\r\n} from '@web3-react/injected-connector'\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector'\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from '@web3-react/frame-connector'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport { formatEther } from '@ethersproject/units'\r\nimport Navigation from '../Components/Navigation'\r\nimport Header from '../Components/Header'\r\nimport ChainId from '../Components/ChainId'\r\n\r\nimport { useEagerConnect, useInactiveListener } from '../hooks'\r\nimport {\r\n  injected,\r\n  network,\r\n  walletconnect,\r\n  walletlink,\r\n  ledger,\r\n  trezor,\r\n  lattice,\r\n  frame,\r\n  authereum,\r\n  fortmatic,\r\n  magic,\r\n  portis,\r\n  torus\r\n} from '../connectors'\r\nimport { Spinner } from '../components/Spinner'\r\n\r\n\r\nenum ConnectorNames {\r\n  Injected = 'Injected',\r\n  Network = 'Network',\r\n  WalletConnect = 'WalletConnect',\r\n  WalletLink = 'WalletLink',\r\n  Ledger = 'Ledger',\r\n  Trezor = 'Trezor',\r\n  Lattice = 'Lattice',\r\n  Frame = 'Frame',\r\n  Authereum = 'Authereum',\r\n  Fortmatic = 'Fortmatic',\r\n  Magic = 'Magic',\r\n  Portis = 'Portis',\r\n  Torus = 'Torus'\r\n}\r\n\r\nconst connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.Network]: network,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.WalletLink]: walletlink,\r\n  [ConnectorNames.Ledger]: ledger,\r\n  [ConnectorNames.Trezor]: trezor,\r\n  [ConnectorNames.Lattice]: lattice,\r\n  [ConnectorNames.Frame]: frame,\r\n  [ConnectorNames.Authereum]: authereum,\r\n  [ConnectorNames.Fortmatic]: fortmatic,\r\n  [ConnectorNames.Magic]: magic,\r\n  [ConnectorNames.Portis]: portis,\r\n  [ConnectorNames.Torus]: torus\r\n}\r\n\r\nfunction getErrorMessage(error: Error) {\r\n  if (error instanceof NoEthereumProviderError) {\r\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\r\n  } else if (error instanceof UnsupportedChainIdError) {\r\n    return \"You're connected to an unsupported network.\"\r\n  } else if (\r\n    error instanceof UserRejectedRequestErrorInjected ||\r\n    error instanceof UserRejectedRequestErrorWalletConnect ||\r\n    error instanceof UserRejectedRequestErrorFrame\r\n  ) {\r\n    return 'Please authorize this website to access your Ethereum account.'\r\n  } else {\r\n    console.error(error)\r\n    return 'An unknown error occurred. Check the console for more details.'\r\n  }\r\n}\r\n\r\nfunction getLibrary(provider: any): Web3Provider {\r\n  const library = new Web3Provider(provider)\r\n  library.pollingInterval = 12000\r\n  return library\r\n}\r\n\r\nexport default function() {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <App />\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction App(openWallet, setOpenWallet) {\r\n  const context = useWeb3React<Web3Provider>()\r\n  const { connector, library, chainId, account, activate, deactivate, active, error } = context\r\n\t\r\n  // handle logic to recognize the connector currently being activated\r\n  const [activatingConnector, setActivatingConnector] = React.useState<any>()\r\n  React.useEffect(() => {\r\n    if (activatingConnector && activatingConnector === connector) {\r\n      setActivatingConnector(undefined)\r\n    }\r\n  }, [activatingConnector, connector])\r\n\r\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\r\n  const triedEager = useEagerConnect()\r\n\r\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\r\n  useInactiveListener(!triedEager || !!activatingConnector)\r\n  if(openWallet === false){\r\n\t  \r\n\t  <Navigation />\r\n\t  return(<>\r\n\t  <Navigation />\r\n\t  <h1>Open you wallet</h1>\r\n\t  \r\n\t  </>)}\r\n\t  \r\n\t  \r\n\t  else{ \t\r\n  return (\r\n    <>\r\n      <Header />\r\n      <hr style={{ margin: '2rem' }} />\r\n      <div\r\n        style={{\r\n          display: 'grid',\r\n          gridGap: '1rem',\r\n          gridTemplateColumns: '1fr',\r\n          maxWidth: '20rem',\r\n          margin: 'auto',\r\n\t\t  float: 'right'\r\n        }}\r\n      >\r\n        {Object.keys(connectorsByName).map(name => {\r\n          const currentConnector = connectorsByName[name]\r\n          const activating = currentConnector === activatingConnector\r\n          const connected = currentConnector === connector\r\n          const disabled = !triedEager || !!activatingConnector || connected || !!error\r\n\r\n          return (\r\n            <button\r\n              style={{\r\n                height: '3rem',\r\n                borderRadius: '1rem',\r\n                borderColor: activating ? 'orange' : connected ? 'green' : 'unset',\r\n                cursor: disabled ? 'unset' : 'pointer',\r\n                position: 'relative'\r\n              }}\r\n              disabled={disabled}\r\n              key={name}\r\n              onClick={() => {\r\n                setActivatingConnector(currentConnector)\r\n                activate(connectorsByName[name])\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  position: 'absolute',\r\n                  top: '0',\r\n                  left: '0',\r\n                  height: '100%',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  color: 'black',\r\n                  margin: '0 0 0 1rem'\r\n                }}\r\n              >\r\n                {activating && <Spinner color={'black'} style={{ height: '25%', marginLeft: '-1rem' }} />}\r\n                {connected && (\r\n                  <span role=\"img\" aria-label=\"check\">\r\n                    ✅\r\n                  </span>\r\n                )}\r\n              </div>\r\n              {name}\r\n            </button>\r\n          )\r\n        })}\r\n      </div>\r\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n        {(active || error) && (\r\n          <button\r\n            style={{\r\n              height: '3rem',\r\n              marginTop: '2rem',\r\n              borderRadius: '1rem',\r\n              borderColor: 'red',\r\n              cursor: 'pointer'\r\n            }}\r\n            onClick={() => {\r\n              deactivate()\r\n            }}\r\n          >\r\n            Deactivate\r\n          </button>\r\n        )}\r\n\r\n        {!!error && <h4 style={{ marginTop: '1rem', marginBottom: '0' }}>{getErrorMessage(error)}</h4>}\r\n      </div>\r\n\r\n      <hr style={{ margin: '2rem' }} />\r\n\r\n      <div\r\n        style={{\r\n          display: 'grid',\r\n          gridGap: '1rem',\r\n          gridTemplateColumns: 'fit-content',\r\n          maxWidth: '20rem',\r\n          margin: 'auto'\r\n        }}\r\n      >\r\n        {!!(library && account) && (\r\n          <button\r\n            style={{\r\n              height: '3rem',\r\n              borderRadius: '1rem',\r\n              cursor: 'pointer'\r\n            }}\r\n            onClick={() => {\r\n              library\r\n                .getSigner(account)\r\n                .signMessage('👋')\r\n                .then((signature: any) => {\r\n                  window.alert(`Success!\\n\\n${signature}`)\r\n                })\r\n                .catch((error: any) => {\r\n                  window.alert('Failure!' + (error && error.message ? `\\n\\n${error.message}` : ''))\r\n                })\r\n            }}\r\n          >\r\n            Sign Message\r\n          </button>\r\n        )}\r\n        {!!(connector === connectorsByName[ConnectorNames.Network] && chainId) && (\r\n          <button\r\n            style={{\r\n              height: '3rem',\r\n              borderRadius: '1rem',\r\n              cursor: 'pointer'\r\n            }}\r\n            onClick={() => {\r\n              ;(connector as any).changeChainId(chainId === 1 ? 4 : 1)\r\n            }}\r\n          >\r\n            Switch Networks\r\n          </button>\r\n        )}\r\n        {connector === connectorsByName[ConnectorNames.WalletConnect] && (\r\n          <button\r\n            style={{\r\n              height: '3rem',\r\n              borderRadius: '1rem',\r\n              cursor: 'pointer'\r\n            }}\r\n            onClick={() => {\r\n              ;(connector as any).close()\r\n            }}\r\n          >\r\n            Kill WalletConnect Session\r\n          </button>\r\n        )}\r\n        {connector === connectorsByName[ConnectorNames.WalletLink] && (\r\n          <button\r\n            style={{\r\n              height: '3rem',\r\n              borderRadius: '1rem',\r\n              cursor: 'pointer'\r\n            }}\r\n            onClick={() => {\r\n              ;(connector as any).close()\r\n            }}\r\n          >\r\n            Kill WalletLink Session\r\n          </button>\r\n        )}\r\n        {connector === connectorsByName[ConnectorNames.Fortmatic] && (\r\n          <button\r\n            style={{\r\n              height: '3rem',\r\n              borderRadius: '1rem',\r\n              cursor: 'pointer'\r\n            }}\r\n            onClick={() => {\r\n              ;(connector as any).close()\r\n            }}\r\n          >\r\n            Kill Fortmatic Session\r\n          </button>\r\n        )}\r\n        {connector === connectorsByName[ConnectorNames.Magic] && (\r\n          <button\r\n            style={{\r\n              height: '3rem',\r\n              borderRadius: '1rem',\r\n              cursor: 'pointer'\r\n            }}\r\n            onClick={() => {\r\n              ;(connector as any).close()\r\n            }}\r\n          >\r\n            Kill Magic Session\r\n          </button>\r\n        )}\r\n        {connector === connectorsByName[ConnectorNames.Portis] && (\r\n          <>\r\n            {chainId !== undefined && (\r\n              <button\r\n                style={{\r\n                  height: '3rem',\r\n                  borderRadius: '1rem',\r\n                  cursor: 'pointer'\r\n                }}\r\n                onClick={() => {\r\n                  ;(connector as any).changeNetwork(chainId === 1 ? 100 : 1)\r\n                }}\r\n              >\r\n                Switch Networks\r\n              </button>\r\n            )}\r\n            <button\r\n              style={{\r\n                height: '3rem',\r\n                borderRadius: '1rem',\r\n                cursor: 'pointer'\r\n              }}\r\n              onClick={() => {\r\n                ;(connector as any).close()\r\n              }}\r\n            >\r\n              Kill Portis Session\r\n            </button>\r\n          </>\r\n        )}\r\n        {connector === connectorsByName[ConnectorNames.Torus] && (\r\n          <button\r\n            style={{\r\n              height: '3rem',\r\n              borderRadius: '1rem',\r\n              cursor: 'pointer'\r\n            }}\r\n            onClick={() => {\r\n              ;(connector as any).close()\r\n            }}\r\n          >\r\n            Kill Torus Session\r\n          </button>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}