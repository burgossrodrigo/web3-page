{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _connectorsByName,\n    _jsxFileName = \"C:\\\\Users\\\\rodri\\\\web3_projects\\\\web3-page\\\\web3-react\\\\example\\\\pages\\\\index.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Web3ReactProvider, UnsupportedChainIdError } from '@web3-react/core';\nimport { NoEthereumProviderError, UserRejectedRequestError as UserRejectedRequestErrorInjected } from '@web3-react/injected-connector';\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector';\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from '@web3-react/frame-connector';\nimport { Web3Provider } from '@ethersproject/providers';\nimport Header from '../Components/Header';\nimport Wallets from '../Components/Wallets';\nimport { injected, network, walletconnect, walletlink, ledger, trezor, lattice, frame, authereum, fortmatic, magic, portis, torus } from '../connectors';\nvar ConnectorNames;\n\n(function (ConnectorNames) {\n  ConnectorNames[\"Injected\"] = \"Injected\";\n  ConnectorNames[\"Network\"] = \"Network\";\n  ConnectorNames[\"WalletConnect\"] = \"WalletConnect\";\n  ConnectorNames[\"WalletLink\"] = \"WalletLink\";\n  ConnectorNames[\"Ledger\"] = \"Ledger\";\n  ConnectorNames[\"Trezor\"] = \"Trezor\";\n  ConnectorNames[\"Lattice\"] = \"Lattice\";\n  ConnectorNames[\"Frame\"] = \"Frame\";\n  ConnectorNames[\"Authereum\"] = \"Authereum\";\n  ConnectorNames[\"Fortmatic\"] = \"Fortmatic\";\n  ConnectorNames[\"Magic\"] = \"Magic\";\n  ConnectorNames[\"Portis\"] = \"Portis\";\n  ConnectorNames[\"Torus\"] = \"Torus\";\n})(ConnectorNames || (ConnectorNames = {}));\n\nvar connectorsByName = (_connectorsByName = {}, _defineProperty(_connectorsByName, ConnectorNames.Injected, injected), _defineProperty(_connectorsByName, ConnectorNames.Network, network), _defineProperty(_connectorsByName, ConnectorNames.WalletConnect, walletconnect), _defineProperty(_connectorsByName, ConnectorNames.WalletLink, walletlink), _defineProperty(_connectorsByName, ConnectorNames.Ledger, ledger), _defineProperty(_connectorsByName, ConnectorNames.Trezor, trezor), _defineProperty(_connectorsByName, ConnectorNames.Lattice, lattice), _defineProperty(_connectorsByName, ConnectorNames.Frame, frame), _defineProperty(_connectorsByName, ConnectorNames.Authereum, authereum), _defineProperty(_connectorsByName, ConnectorNames.Fortmatic, fortmatic), _defineProperty(_connectorsByName, ConnectorNames.Magic, magic), _defineProperty(_connectorsByName, ConnectorNames.Portis, portis), _defineProperty(_connectorsByName, ConnectorNames.Torus, torus), _connectorsByName);\n\nfunction getErrorMessage(error) {\n  if (error instanceof NoEthereumProviderError) {\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.';\n  } else if (error instanceof UnsupportedChainIdError) {\n    return \"You're connected to an unsupported network.\";\n  } else if (error instanceof UserRejectedRequestErrorInjected || error instanceof UserRejectedRequestErrorWalletConnect || error instanceof UserRejectedRequestErrorFrame) {\n    return 'Please authorize this website to access your Ethereum account.';\n  } else {\n    console.error(error);\n    return 'An unknown error occurred. Check the console for more details.';\n  }\n}\n\nfunction getLibrary(provider) {\n  var library = new Web3Provider(provider);\n  library.pollingInterval = 12000;\n  return library;\n}\n\nexport default function () {\n  return __jsx(Web3ReactProvider, {\n    getLibrary: getLibrary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), __jsx(Wallets, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/rodri/web3_projects/web3-page/web3-react/example/pages/index.tsx"],"names":["React","Web3ReactProvider","UnsupportedChainIdError","NoEthereumProviderError","UserRejectedRequestError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","UserRejectedRequestErrorFrame","Web3Provider","Header","Wallets","injected","network","walletconnect","walletlink","ledger","trezor","lattice","frame","authereum","fortmatic","magic","portis","torus","ConnectorNames","connectorsByName","Injected","Network","WalletConnect","WalletLink","Ledger","Trezor","Lattice","Frame","Authereum","Fortmatic","Magic","Portis","Torus","getErrorMessage","error","console","getLibrary","provider","library","pollingInterval"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAASC,iBAAT,EAA0CC,uBAA1C,QAAyE,kBAAzE;AACA,SACEC,uBADF,EAEEC,wBAAwB,IAAIC,gCAF9B,QAGO,gCAHP;AAIA,SAASD,wBAAwB,IAAIE,qCAArC,QAAkF,qCAAlF;AACA,SAASF,wBAAwB,IAAIG,6BAArC,QAA0E,6BAA1E;AACA,SAASC,YAAT,QAA6B,0BAA7B;AAGA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AAGA,SACEC,QADF,EAEEC,OAFF,EAGEC,aAHF,EAIEC,UAJF,EAKEC,MALF,EAMEC,MANF,EAOEC,OAPF,EAQEC,KARF,EASEC,SATF,EAUEC,SAVF,EAWEC,KAXF,EAYEC,MAZF,EAaEC,KAbF,QAcO,eAdP;IAkBKC,c;;WAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,KAAAA,c;;AAgBL,IAAMC,gBAA4D,+DAC/DD,cAAc,CAACE,QADgD,EACrCf,QADqC,sCAE/Da,cAAc,CAACG,OAFgD,EAEtCf,OAFsC,sCAG/DY,cAAc,CAACI,aAHgD,EAGhCf,aAHgC,sCAI/DW,cAAc,CAACK,UAJgD,EAInCf,UAJmC,sCAK/DU,cAAc,CAACM,MALgD,EAKvCf,MALuC,sCAM/DS,cAAc,CAACO,MANgD,EAMvCf,MANuC,sCAO/DQ,cAAc,CAACQ,OAPgD,EAOtCf,OAPsC,sCAQ/DO,cAAc,CAACS,KARgD,EAQxCf,KARwC,sCAS/DM,cAAc,CAACU,SATgD,EASpCf,SAToC,sCAU/DK,cAAc,CAACW,SAVgD,EAUpCf,SAVoC,sCAW/DI,cAAc,CAACY,KAXgD,EAWxCf,KAXwC,sCAY/DG,cAAc,CAACa,MAZgD,EAYvCf,MAZuC,sCAa/DE,cAAc,CAACc,KAbgD,EAaxCf,KAbwC,qBAAlE;;AAgBA,SAASgB,eAAT,CAAyBC,KAAzB,EAAuC;AACrC,MAAIA,KAAK,YAAYrC,uBAArB,EAA8C;AAC5C,WAAO,6GAAP;AACD,GAFD,MAEO,IAAIqC,KAAK,YAAYtC,uBAArB,EAA8C;AACnD,WAAO,6CAAP;AACD,GAFM,MAEA,IACLsC,KAAK,YAAYnC,gCAAjB,IACAmC,KAAK,YAAYlC,qCADjB,IAEAkC,KAAK,YAAYjC,6BAHZ,EAIL;AACA,WAAO,gEAAP;AACD,GANM,MAMA;AACLkC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,WAAO,gEAAP;AACD;AACF;;AAED,SAASE,UAAT,CAAoBC,QAApB,EAAiD;AAC/C,MAAMC,OAAO,GAAG,IAAIpC,YAAJ,CAAiBmC,QAAjB,CAAhB;AACAC,EAAAA,OAAO,CAACC,eAAR,GAA0B,KAA1B;AACA,SAAOD,OAAP;AACD;;AAED,eAAe,YAAW;AACxB,SACE,MAAC,iBAAD;AAAmB,IAAA,UAAU,EAAEF,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAED,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFC,CADF;AAMD","sourcesContent":["import React, { useState } from 'react'\r\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\r\n} from '@web3-react/injected-connector'\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector'\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from '@web3-react/frame-connector'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport { formatEther } from '@ethersproject/units'\r\nimport Navigation from '../Components/Navigation'\r\nimport Header from '../Components/Header'\r\nimport ChainId from '../Components/ChainId'\r\nimport Wallets from '../Components/Wallets'\r\n\r\nimport { useEagerConnect, useInactiveListener } from '../hooks'\r\nimport {\r\n  injected,\r\n  network,\r\n  walletconnect,\r\n  walletlink,\r\n  ledger,\r\n  trezor,\r\n  lattice,\r\n  frame,\r\n  authereum,\r\n  fortmatic,\r\n  magic,\r\n  portis,\r\n  torus\r\n} from '../connectors'\r\nimport { Spinner } from '../components/Spinner'\r\n\r\n\r\nenum ConnectorNames {\r\n  Injected = 'Injected',\r\n  Network = 'Network',\r\n  WalletConnect = 'WalletConnect',\r\n  WalletLink = 'WalletLink',\r\n  Ledger = 'Ledger',\r\n  Trezor = 'Trezor',\r\n  Lattice = 'Lattice',\r\n  Frame = 'Frame',\r\n  Authereum = 'Authereum',\r\n  Fortmatic = 'Fortmatic',\r\n  Magic = 'Magic',\r\n  Portis = 'Portis',\r\n  Torus = 'Torus'\r\n}\r\n\r\nconst connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.Network]: network,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.WalletLink]: walletlink,\r\n  [ConnectorNames.Ledger]: ledger,\r\n  [ConnectorNames.Trezor]: trezor,\r\n  [ConnectorNames.Lattice]: lattice,\r\n  [ConnectorNames.Frame]: frame,\r\n  [ConnectorNames.Authereum]: authereum,\r\n  [ConnectorNames.Fortmatic]: fortmatic,\r\n  [ConnectorNames.Magic]: magic,\r\n  [ConnectorNames.Portis]: portis,\r\n  [ConnectorNames.Torus]: torus\r\n}\r\n\r\nfunction getErrorMessage(error: Error) {\r\n  if (error instanceof NoEthereumProviderError) {\r\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\r\n  } else if (error instanceof UnsupportedChainIdError) {\r\n    return \"You're connected to an unsupported network.\"\r\n  } else if (\r\n    error instanceof UserRejectedRequestErrorInjected ||\r\n    error instanceof UserRejectedRequestErrorWalletConnect ||\r\n    error instanceof UserRejectedRequestErrorFrame\r\n  ) {\r\n    return 'Please authorize this website to access your Ethereum account.'\r\n  } else {\r\n    console.error(error)\r\n    return 'An unknown error occurred. Check the console for more details.'\r\n  }\r\n}\r\n\r\nfunction getLibrary(provider: any): Web3Provider {\r\n  const library = new Web3Provider(provider)\r\n  library.pollingInterval = 12000\r\n  return library\r\n}\r\n\r\nexport default function() {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Header />\r\n\t  <Wallets />\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}